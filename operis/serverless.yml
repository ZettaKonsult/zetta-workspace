service: operis

plugins:
  - serverless-webpack

custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: eu-central-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:eu-central-1:460056602695:table/OperisProjects"

functions:

  # Project handlers. #

  createProject:
    handler: src/database/projects.createProject
    events:
      - http:
          path: projects
          method: post
          cors: true
          authorizer: aws_iam
  deleteProject:
    handler: src/database/projects.deleteProject
    events:
      - http:
          path: projects/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  getProject:
    handler: src/database/projects.getProject
    events:
      - http:
          path: projects/{id}
          method: get
          cors: true
          authorizer: aws_iam
  updateProject:
    handler: src/database/projects.updateProject
    events:
      - http:
          path: projects/{id}
          method: put
          cors: true
          authorizer: aws_iam

  # Report handlers. #

  createReport:
    handler: src/database/reports.createReport
    events:
      - http:
          path: reports
          method: post
          cors: true
          authorizer: aws_iam
  deleteReport:
    handler: src/database/reports.deleteReport
    events:
      - http:
          path: reports/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  getReport:
    handler: src/database/reports.getReport
    events:
      - http:
          path: reports/{id}
          method: get
          cors: true
          authorizer: aws_iam
  updateReport:
    handler: src/database/reports.updateReport
    events:
      - http:
          path: reports/{id}
          method: put
          cors: true
          authorizer: aws_iam

  # Worker handlers. #

  createWorker:
    handler: src/database/workers.createWorker
    events:
      - http:
          path: workers
          method: post
          cors: true
          authorizer: aws_iam
  deleteWorker:
    handler: src/database/workers.deleteWorker
    events:
      - http:
          path: workers/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  getWorker:
    handler: src/database/workers.getWorker
    events:
      - http:
          path: workers/{id}
          method: get
          cors: true
          authorizer: aws_iam
  updateWorker:
    handler: src/database/workers.updateWorker
    events:
      - http:
          path: workers/{id}
          method: put
          cors: true
          authorizer: aws_iam
