# NOTE: update this with your service name
service: operis-billable-time

package:

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

# Enable auto-packing of external modules
custom:
  serverless-offline:
    babelOptions:
      presets: ["env"]
  webpackIncludeModules: true
  Invoices: 'Invoices-${self:provider.stage}'
  InvoiceRows: 'InvoiceRows-${self:provider.stage}'
  Recipients: 'Recipients-${self:provider.stage}'
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true

    seed:
      dev:
        sources:
          - table: Recipients-dev
            sources: [./offline/recipientMock.json]
          - table: InvoiceRows-dev
            sources: [./offline/invoiceRowsMock.json]
provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource:
        - { "Fn::GetAtt": ["InvoicesDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["InvoiceRowsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["RecipientsDynamoDBTable", "Arn" ] }
  environment:
    InvoiceRowsTable: ${self:custom.InvoiceRows}
    InvoicesTable: ${self:custom.Invoices}

functions:
  createInvoice:
    handler: src/handler.writeInvoice
    events:
      - http:
          path: /invoice
          method: post
  addBillableRow:
    handler: src/handler.writeBillableRow
    events:
      - http:
          path: /billrow
          method: post
  allBillableRows:
    handler: src/handler.getBillableRows
    events:
      - http:
          path: /billrows/{companyCustomerId}
          method: get


resources:
  Resources:
    InvoicesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: companyCustomerId
            AttributeType: S
          -
            AttributeName: createdAt
            AttributeType: N
        KeySchema:
          -
            AttributeName: companyCustomerId
            KeyType: HASH
          -
            AttributeName: createdAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.Invoices}

    InvoiceRowsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: companyCustomerId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: companyCustomerId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.InvoiceRows}

    RecipientsDynamoDBTable:
        Type: 'AWS::DynamoDB::Table'
        DeletionPolicy: Retain
        Properties:
          AttributeDefinitions:
            -
              AttributeName: id
              AttributeType: S
          KeySchema:
            -
              AttributeName: id
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          TableName: ${self:custom.Recipients}

